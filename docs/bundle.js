(()=>{"use strict";var t,n;!function(t){t.Red="red",t.Pink="pink",t.Purple="purple",t.DeepPurple="deepPurple",t.Indigo="indigo",t.Blue="blue",t.LightBlue="lightBlue",t.Cyan="cyan",t.Teal="teal",t.Green="green",t.LightGreen="lightGreen",t.Lime="lime",t.Yellow="yellow",t.Amber="amber",t.Orange="orange",t.DeepOrange="deepOrange",t.Brown="brown",t.Grey="grey",t.BlueGrey="blueGrey"}(n||(n={}));var e,r,i=((t={})[n.Red]=["#ffebee","#b71c1c"],t[n.Pink]=["#fce4ec","#880e4f"],t[n.Purple]=["#f3e5f5","#4a148c"],t[n.DeepPurple]=["#ede7f6","#311b92"],t[n.Indigo]=["#e8eaf6","#1a237e"],t[n.Blue]=["#e3f2fd","#0d47a1"],t[n.LightBlue]=["#e1f5fe","#01579b"],t[n.Cyan]=["#e0f7fa","#006064"],t[n.Teal]=["#e0f2f1","#004d40"],t[n.Green]=["#e8f5e9","#1b5e20"],t[n.LightGreen]=["#f1f8e9","#33691e"],t[n.Lime]=["#f9fbe7","#827717"],t[n.Yellow]=["#fffde7","#f57f17"],t[n.Amber]=["#fff8e1","#ff6f00"],t[n.Orange]=["#fff3e0","#e65100"],t[n.DeepOrange]=["#fbe9e7","#bf360c"],t[n.Brown]=["#efebe9","#3e2723"],t[n.Grey]=["#fafafa","#212121"],t[n.BlueGrey]=["#eceff1","#263238"],t);!function(t){t.BE="BE",t.BG="BG",t.CZ="CZ",t.DK="DK",t.DE="DE",t.EE="EE",t.IE="IE",t.EL="EL",t.ES="ES",t.FR="FR",t.HR="HR",t.IT="IT",t.CY="CY",t.LV="LV",t.LT="LT",t.LU="LU",t.HU="HU",t.MT="MT",t.NL="NL",t.AT="AT",t.PL="PL",t.PT="PT",t.RO="RO",t.SI="SI",t.SK="SK",t.FI="FI",t.SE="SE"}(e||(e={})),Object.keys(e),function(t){t.Continous="continous",t.Bins="bins"}(r||(r={}));var o=[{country:e.BE,value:5.4},{country:e.BG,value:4.2},{country:e.CZ,value:2},{country:e.DK,value:5},{country:e.DE,value:3.2},{country:e.EE,value:4.4},{country:e.IE,value:5},{country:e.EL,value:17.3},{country:e.ES,value:14.1},{country:e.FR,value:8.5},{country:e.HR,value:6.6},{country:e.IT,value:10},{country:e.CY,value:7.1},{country:e.LV,value:6.3},{country:e.LT,value:6.3},{country:e.LU,value:5.6},{country:e.HU,value:3.4},{country:e.MT,value:3.4},{country:e.NL,value:3.4},{country:e.AT,value:4.5},{country:e.PL,value:3.3},{country:e.PT,value:6.5},{country:e.RO,value:3.9},{country:e.SI,value:4.5},{country:e.SK,value:5.8},{country:e.FI,value:6.7},{country:e.SE,value:6.8}];function a(t,n){let e,r;if(void 0===n)for(const n of t)null!=n&&(void 0===e?n>=n&&(e=r=n):(e>n&&(e=n),r<n&&(r=n)));else{let i=-1;for(let o of t)null!=(o=n(o,++i,t))&&(void 0===e?o>=o&&(e=r=o):(e>o&&(e=o),r<o&&(r=o)))}return[e,r]}var u=Array.prototype,l=u.slice;function s(t,n){return null==t||null==n?NaN:t<n?-1:t>n?1:t>=n?0:NaN}function c(t,n){return null==t||null==n?NaN:n<t?-1:n>t?1:n>=t?0:NaN}function f(t){let n,e,r;function i(t,r,i=0,o=t.length){if(i<o){if(0!==n(r,r))return o;do{const n=i+o>>>1;e(t[n],r)<0?i=n+1:o=n}while(i<o)}return i}return 2!==t.length?(n=s,e=(n,e)=>s(t(n),e),r=(n,e)=>t(n)-e):(n=t===s||t===c?t:h,e=t,r=t),{left:i,center:function(t,n,e=0,o=t.length){const a=i(t,n,e,o-1);return a>e&&r(t[a-1],n)>-r(t[a],n)?a-1:a},right:function(t,r,i=0,o=t.length){if(i<o){if(0!==n(r,r))return o;do{const n=i+o>>>1;e(t[n],r)<=0?i=n+1:o=n}while(i<o)}return i}}}function h(){return 0}u.map;const p=f(s),d=p.right,y=(p.left,f((function(t){return null===t?NaN:+t})).center,d);function v(t){return()=>t}function g(t){return t}const m=Math.sqrt(50),w=Math.sqrt(10),_=Math.sqrt(2);function b(t,n,e){const r=(n-t)/Math.max(0,e),i=Math.floor(Math.log10(r)),o=r/Math.pow(10,i),a=o>=m?10:o>=w?5:o>=_?2:1;let u,l,s;return i<0?(s=Math.pow(10,-i)/a,u=Math.round(t*s),l=Math.round(n*s),u/s<t&&++u,l/s>n&&--l,s=-s):(s=Math.pow(10,i)*a,u=Math.round(t/s),l=Math.round(n/s),u*s<t&&++u,l*s>n&&--l),l<u&&.5<=e&&e<2?b(t,n,2*e):[u,l,s]}function x(t,n,e){if(!((e=+e)>0))return[];if((t=+t)==(n=+n))return[t];const r=n<t,[i,o,a]=r?b(n,t,e):b(t,n,e);if(!(o>=i))return[];const u=o-i+1,l=new Array(u);if(r)if(a<0)for(let t=0;t<u;++t)l[t]=(o-t)/-a;else for(let t=0;t<u;++t)l[t]=(o-t)*a;else if(a<0)for(let t=0;t<u;++t)l[t]=(i+t)/-a;else for(let t=0;t<u;++t)l[t]=(i+t)*a;return l}function M(t,n,e){return b(t=+t,n=+n,e=+e)[2]}function A(t){return Math.ceil(Math.log(function(t,n){let e=0;for(let n of t)null!=n&&(n=+n)>=n&&++e;return e}(t))/Math.LN2)+1}function k(){}function N(t){return null==t?k:function(){return this.querySelector(t)}}function E(){return[]}function S(t){return null==t?E:function(){return this.querySelectorAll(t)}}function L(t){return function(){return this.matches(t)}}function C(t){return function(n){return n.matches(t)}}var $=Array.prototype.find;function D(){return this.firstElementChild}var P=Array.prototype.filter;function T(){return Array.from(this.children)}function q(t){return new Array(t.length)}function B(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}function I(t,n,e,r,i,o){for(var a,u=0,l=n.length,s=o.length;u<s;++u)(a=n[u])?(a.__data__=o[u],r[u]=a):e[u]=new B(t,o[u]);for(;u<l;++u)(a=n[u])&&(i[u]=a)}function O(t,n,e,r,i,o,a){var u,l,s,c=new Map,f=n.length,h=o.length,p=new Array(f);for(u=0;u<f;++u)(l=n[u])&&(p[u]=s=a.call(l,l.__data__,u,n)+"",c.has(s)?i[u]=l:c.set(s,l));for(u=0;u<h;++u)s=a.call(t,o[u],u,o)+"",(l=c.get(s))?(r[u]=l,l.__data__=o[u],c.delete(s)):e[u]=new B(t,o[u]);for(u=0;u<f;++u)(l=n[u])&&c.get(p[u])===l&&(i[u]=l)}function R(t){return t.__data__}function j(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}function X(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}B.prototype={constructor:B,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var H="http://www.w3.org/1999/xhtml";const Y={svg:"http://www.w3.org/2000/svg",xhtml:H,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function F(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),Y.hasOwnProperty(n)?{space:Y[n],local:t}:t}function G(t){return function(){this.removeAttribute(t)}}function z(t){return function(){this.removeAttributeNS(t.space,t.local)}}function U(t,n){return function(){this.setAttribute(t,n)}}function V(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function K(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function Z(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}function W(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function J(t){return function(){this.style.removeProperty(t)}}function Q(t,n,e){return function(){this.style.setProperty(t,n,e)}}function tt(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function nt(t,n){return t.style.getPropertyValue(n)||W(t).getComputedStyle(t,null).getPropertyValue(n)}function et(t){return function(){delete this[t]}}function rt(t,n){return function(){this[t]=n}}function it(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}function ot(t){return t.trim().split(/^|\s+/)}function at(t){return t.classList||new ut(t)}function ut(t){this._node=t,this._names=ot(t.getAttribute("class")||"")}function lt(t,n){for(var e=at(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function st(t,n){for(var e=at(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function ct(t){return function(){lt(this,t)}}function ft(t){return function(){st(this,t)}}function ht(t,n){return function(){(n.apply(this,arguments)?lt:st)(this,t)}}function pt(){this.textContent=""}function dt(t){return function(){this.textContent=t}}function yt(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}function vt(){this.innerHTML=""}function gt(t){return function(){this.innerHTML=t}}function mt(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}function wt(){this.nextSibling&&this.parentNode.appendChild(this)}function _t(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function bt(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===H&&n.documentElement.namespaceURI===H?n.createElement(t):n.createElementNS(e,t)}}function xt(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function Mt(t){var n=F(t);return(n.local?xt:bt)(n)}function At(){return null}function kt(){var t=this.parentNode;t&&t.removeChild(this)}function Nt(){var t=this.cloneNode(!1),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function Et(){var t=this.cloneNode(!0),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function St(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.options);++i?n.length=i:delete this.__on}}}function Lt(t,n,e){return function(){var r,i=this.__on,o=function(t){return function(n){t.call(this,n,this.__data__)}}(n);if(i)for(var a=0,u=i.length;a<u;++a)if((r=i[a]).type===t.type&&r.name===t.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=o,r.options=e),void(r.value=n);this.addEventListener(t.type,o,e),r={type:t.type,name:t.name,value:n,listener:o,options:e},i?i.push(r):this.__on=[r]}}function Ct(t,n,e){var r=W(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function $t(t,n){return function(){return Ct(this,t,n)}}function Dt(t,n){return function(){return Ct(this,t,n.apply(this,arguments))}}ut.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var Pt=[null];function Tt(t,n){this._groups=t,this._parents=n}function qt(){return new Tt([[document.documentElement]],Pt)}Tt.prototype=qt.prototype={constructor:Tt,select:function(t){"function"!=typeof t&&(t=N(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a,u=n[i],l=u.length,s=r[i]=new Array(l),c=0;c<l;++c)(o=u[c])&&(a=t.call(o,o.__data__,c,u))&&("__data__"in o&&(a.__data__=o.__data__),s[c]=a);return new Tt(r,this._parents)},selectAll:function(t){t="function"==typeof t?function(t){return function(){return null==(n=t.apply(this,arguments))?[]:Array.isArray(n)?n:Array.from(n);var n}}(t):S(t);for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var a,u=n[o],l=u.length,s=0;s<l;++s)(a=u[s])&&(r.push(t.call(a,a.__data__,s,u)),i.push(a));return new Tt(r,i)},selectChild:function(t){return this.select(null==t?D:function(t){return function(){return $.call(this.children,t)}}("function"==typeof t?t:C(t)))},selectChildren:function(t){return this.selectAll(null==t?T:function(t){return function(){return P.call(this.children,t)}}("function"==typeof t?t:C(t)))},filter:function(t){"function"!=typeof t&&(t=L(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,l=r[i]=[],s=0;s<u;++s)(o=a[s])&&t.call(o,o.__data__,s,a)&&l.push(o);return new Tt(r,this._parents)},data:function(t,n){if(!arguments.length)return Array.from(this,R);var e,r=n?O:I,i=this._parents,o=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var a=o.length,u=new Array(a),l=new Array(a),s=new Array(a),c=0;c<a;++c){var f=i[c],h=o[c],p=h.length,d=j(t.call(f,f&&f.__data__,c,i)),y=d.length,v=l[c]=new Array(y),g=u[c]=new Array(y);r(f,h,v,g,s[c]=new Array(p),d,n);for(var m,w,_=0,b=0;_<y;++_)if(m=v[_]){for(_>=b&&(b=_+1);!(w=g[b])&&++b<y;);m._next=w||null}}return(u=new Tt(u,i))._enter=l,u._exit=s,u},enter:function(){return new Tt(this._enter||this._groups.map(q),this._parents)},exit:function(){return new Tt(this._exit||this._groups.map(q),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,o=this.exit();return"function"==typeof t?(r=t(r))&&(r=r.selection()):r=r.append(t+""),null!=n&&(i=n(i))&&(i=i.selection()),null==e?o.remove():e(o),r&&i?r.merge(i).order():i},merge:function(t){for(var n=t.selection?t.selection():t,e=this._groups,r=n._groups,i=e.length,o=r.length,a=Math.min(i,o),u=new Array(i),l=0;l<a;++l)for(var s,c=e[l],f=r[l],h=c.length,p=u[l]=new Array(h),d=0;d<h;++d)(s=c[d]||f[d])&&(p[d]=s);for(;l<i;++l)u[l]=e[l];return new Tt(u,this._parents)},selection:function(){return this},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,a=i[o];--o>=0;)(r=i[o])&&(a&&4^r.compareDocumentPosition(a)&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=X);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var a,u=e[o],l=u.length,s=i[o]=new Array(l),c=0;c<l;++c)(a=u[c])&&(s[c]=a);s.sort(n)}return new Tt(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var a=r[i];if(a)return a}return null},size:function(){let t=0;for(const n of this)++t;return t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],a=0,u=o.length;a<u;++a)(i=o[a])&&t.call(i,i.__data__,a,o);return this},attr:function(t,n){var e=F(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?z:G:"function"==typeof n?e.local?Z:K:e.local?V:U)(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?J:"function"==typeof n?tt:Q)(t,n,null==e?"":e)):nt(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?et:"function"==typeof n?it:rt)(t,n)):this.node()[t]},classed:function(t,n){var e=ot(t+"");if(arguments.length<2){for(var r=at(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?ht:n?ct:ft)(e,n))},text:function(t){return arguments.length?this.each(null==t?pt:("function"==typeof t?yt:dt)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?vt:("function"==typeof t?mt:gt)(t)):this.node().innerHTML},raise:function(){return this.each(wt)},lower:function(){return this.each(_t)},append:function(t){var n="function"==typeof t?t:Mt(t);return this.select((function(){return this.appendChild(n.apply(this,arguments))}))},insert:function(t,n){var e="function"==typeof t?t:Mt(t),r=null==n?At:"function"==typeof n?n:N(n);return this.select((function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(kt)},clone:function(t){return this.select(t?Et:Nt)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}}))}(t+""),a=o.length;if(!(arguments.length<2)){for(u=n?Lt:St,r=0;r<a;++r)this.each(u(o[r],n,e));return this}var u=this.node().__on;if(u)for(var l,s=0,c=u.length;s<c;++s)for(r=0,l=u[s];r<a;++r)if((i=o[r]).type===l.type&&i.name===l.name)return l.value},dispatch:function(t,n){return this.each(("function"==typeof n?Dt:$t)(t,n))},[Symbol.iterator]:function*(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r,i=t[n],o=0,a=i.length;o<a;++o)(r=i[o])&&(yield r)}};const Bt=qt;var It={value:()=>{}};function Ot(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new Rt(r)}function Rt(t){this._=t}function jt(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function Xt(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=It,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}Rt.prototype=Ot.prototype={constructor:Rt,on:function(t,n){var e,r,i=this._,o=(r=i,(t+"").trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");if(e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),t&&!r.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}}))),a=-1,u=o.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++a<u;)if(e=(t=o[a]).type)i[e]=Xt(i[e],t.name,n);else if(null==n)for(e in i)i[e]=Xt(i[e],t.name,null);return this}for(;++a<u;)if((e=(t=o[a]).type)&&(e=jt(i[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new Rt(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};const Ht=Ot;var Yt,Ft,Gt=0,zt=0,Ut=0,Vt=1e3,Kt=0,Zt=0,Wt=0,Jt="object"==typeof performance&&performance.now?performance:Date,Qt="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function tn(){return Zt||(Qt(nn),Zt=Jt.now()+Wt)}function nn(){Zt=0}function en(){this._call=this._time=this._next=null}function rn(t,n,e){var r=new en;return r.restart(t,n,e),r}function on(){Zt=(Kt=Jt.now())+Wt,Gt=zt=0;try{!function(){tn(),++Gt;for(var t,n=Yt;n;)(t=Zt-n._time)>=0&&n._call.call(void 0,t),n=n._next;--Gt}()}finally{Gt=0,function(){for(var t,n,e=Yt,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Yt=n);Ft=t,un(r)}(),Zt=0}}function an(){var t=Jt.now(),n=t-Kt;n>Vt&&(Wt-=n,Kt=t)}function un(t){Gt||(zt&&(zt=clearTimeout(zt)),t-Zt>24?(t<1/0&&(zt=setTimeout(on,t-Jt.now()-Wt)),Ut&&(Ut=clearInterval(Ut))):(Ut||(Kt=Jt.now(),Ut=setInterval(an,Vt)),Gt=1,Qt(on)))}function ln(t,n,e){var r=new en;return n=null==n?0:+n,r.restart((e=>{r.stop(),t(e+n)}),n,e),r}en.prototype=rn.prototype={constructor:en,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?tn():+e)+(null==n?0:+n),this._next||Ft===this||(Ft?Ft._next=this:Yt=this,Ft=this),this._call=t,this._time=e,un()},stop:function(){this._call&&(this._call=null,this._time=1/0,un())}};var sn=Ht("start","end","cancel","interrupt"),cn=[],fn=0,hn=1,pn=2,dn=3,yn=4,vn=5,gn=6;function mn(t,n,e,r,i,o){var a=t.__transition;if(a){if(e in a)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(l){var s,c,f,h;if(e.state!==hn)return u();for(s in i)if((h=i[s]).name===e.name){if(h.state===dn)return ln(o);h.state===yn?(h.state=gn,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[s]):+s<n&&(h.state=gn,h.timer.stop(),h.on.call("cancel",t,t.__data__,h.index,h.group),delete i[s])}if(ln((function(){e.state===dn&&(e.state=yn,e.timer.restart(a,e.delay,e.time),a(l))})),e.state=pn,e.on.call("start",t,t.__data__,e.index,e.group),e.state===pn){for(e.state=dn,r=new Array(f=e.tween.length),s=0,c=-1;s<f;++s)(h=e.tween[s].value.call(t,t.__data__,e.index,e.group))&&(r[++c]=h);r.length=c+1}}function a(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(u),e.state=vn,1),o=-1,a=r.length;++o<a;)r[o].call(t,i);e.state===vn&&(e.on.call("end",t,t.__data__,e.index,e.group),u())}function u(){for(var r in e.state=gn,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=rn((function(t){e.state=hn,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)}),0,e.time)}(t,e,{name:n,index:r,group:i,on:sn,tween:cn,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:fn})}function wn(t,n){var e=bn(t,n);if(e.state>fn)throw new Error("too late; already scheduled");return e}function _n(t,n){var e=bn(t,n);if(e.state>dn)throw new Error("too late; already running");return e}function bn(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}function xn(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}var Mn,An=180/Math.PI,kn={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Nn(t,n,e,r,i,o){var a,u,l;return(a=Math.sqrt(t*t+n*n))&&(t/=a,n/=a),(l=t*e+n*r)&&(e-=t*l,r-=n*l),(u=Math.sqrt(e*e+r*r))&&(e/=u,r/=u,l/=u),t*r<n*e&&(t=-t,n=-n,l=-l,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*An,skewX:Math.atan(l)*An,scaleX:a,scaleY:u}}function En(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,a){var u=[],l=[];return o=t(o),a=t(a),function(t,r,i,o,a,u){if(t!==i||r!==o){var l=a.push("translate(",null,n,null,e);u.push({i:l-4,x:xn(t,i)},{i:l-2,x:xn(r,o)})}else(i||o)&&a.push("translate("+i+n+o+e)}(o.translateX,o.translateY,a.translateX,a.translateY,u,l),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:xn(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,a.rotate,u,l),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:xn(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,a.skewX,u,l),function(t,n,e,r,o,a){if(t!==e||n!==r){var u=o.push(i(o)+"scale(",null,",",null,")");a.push({i:u-4,x:xn(t,e)},{i:u-2,x:xn(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,a.scaleX,a.scaleY,u,l),o=a=null,function(t){for(var n,e=-1,r=l.length;++e<r;)u[(n=l[e]).i]=n.x(t);return u.join("")}}}var Sn=En((function(t){const n=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(t+"");return n.isIdentity?kn:Nn(n.a,n.b,n.c,n.d,n.e,n.f)}),"px, ","px)","deg)"),Ln=En((function(t){return null==t?kn:(Mn||(Mn=document.createElementNS("http://www.w3.org/2000/svg","g")),Mn.setAttribute("transform",t),(t=Mn.transform.baseVal.consolidate())?Nn((t=t.matrix).a,t.b,t.c,t.d,t.e,t.f):kn)}),", ",")",")");function Cn(t,n){var e,r;return function(){var i=_n(this,t),o=i.tween;if(o!==e)for(var a=0,u=(r=e=o).length;a<u;++a)if(r[a].name===n){(r=r.slice()).splice(a,1);break}i.tween=r}}function $n(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=_n(this,t),a=o.tween;if(a!==r){i=(r=a).slice();for(var u={name:n,value:e},l=0,s=i.length;l<s;++l)if(i[l].name===n){i[l]=u;break}l===s&&i.push(u)}o.tween=i}}function Dn(t,n,e){var r=t._id;return t.each((function(){var t=_n(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)})),function(t){return bn(t,r).value[n]}}function Pn(t,n,e){t.prototype=n.prototype=e,e.constructor=t}function Tn(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function qn(){}var Bn=.7,In=1/Bn,On="\\s*([+-]?\\d+)\\s*",Rn="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",jn="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Xn=/^#([0-9a-f]{3,8})$/,Hn=new RegExp(`^rgb\\(${On},${On},${On}\\)$`),Yn=new RegExp(`^rgb\\(${jn},${jn},${jn}\\)$`),Fn=new RegExp(`^rgba\\(${On},${On},${On},${Rn}\\)$`),Gn=new RegExp(`^rgba\\(${jn},${jn},${jn},${Rn}\\)$`),zn=new RegExp(`^hsl\\(${Rn},${jn},${jn}\\)$`),Un=new RegExp(`^hsla\\(${Rn},${jn},${jn},${Rn}\\)$`),Vn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Kn(){return this.rgb().formatHex()}function Zn(){return this.rgb().formatRgb()}function Wn(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=Xn.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?Jn(n):3===e?new ne(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?Qn(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?Qn(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=Hn.exec(t))?new ne(n[1],n[2],n[3],1):(n=Yn.exec(t))?new ne(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Fn.exec(t))?Qn(n[1],n[2],n[3],n[4]):(n=Gn.exec(t))?Qn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=zn.exec(t))?ue(n[1],n[2]/100,n[3]/100,1):(n=Un.exec(t))?ue(n[1],n[2]/100,n[3]/100,n[4]):Vn.hasOwnProperty(t)?Jn(Vn[t]):"transparent"===t?new ne(NaN,NaN,NaN,0):null}function Jn(t){return new ne(t>>16&255,t>>8&255,255&t,1)}function Qn(t,n,e,r){return r<=0&&(t=n=e=NaN),new ne(t,n,e,r)}function te(t,n,e,r){return 1===arguments.length?((i=t)instanceof qn||(i=Wn(i)),i?new ne((i=i.rgb()).r,i.g,i.b,i.opacity):new ne):new ne(t,n,e,null==r?1:r);var i}function ne(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function ee(){return`#${ae(this.r)}${ae(this.g)}${ae(this.b)}`}function re(){const t=ie(this.opacity);return`${1===t?"rgb(":"rgba("}${oe(this.r)}, ${oe(this.g)}, ${oe(this.b)}${1===t?")":`, ${t})`}`}function ie(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function oe(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function ae(t){return((t=oe(t))<16?"0":"")+t.toString(16)}function ue(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new se(t,n,e,r)}function le(t){if(t instanceof se)return new se(t.h,t.s,t.l,t.opacity);if(t instanceof qn||(t=Wn(t)),!t)return new se;if(t instanceof se)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),a=NaN,u=o-i,l=(o+i)/2;return u?(a=n===o?(e-r)/u+6*(e<r):e===o?(r-n)/u+2:(n-e)/u+4,u/=l<.5?o+i:2-o-i,a*=60):u=l>0&&l<1?0:a,new se(a,u,l,t.opacity)}function se(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function ce(t){return(t=(t||0)%360)<0?t+360:t}function fe(t){return Math.max(0,Math.min(1,t||0))}function he(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}function pe(t,n,e,r,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*n+(4-6*o+3*a)*e+(1+3*t+3*o-3*a)*r+a*i)/6}Pn(qn,Wn,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Kn,formatHex:Kn,formatHex8:function(){return this.rgb().formatHex8()},formatHsl:function(){return le(this).formatHsl()},formatRgb:Zn,toString:Zn}),Pn(ne,te,Tn(qn,{brighter(t){return t=null==t?In:Math.pow(In,t),new ne(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=null==t?Bn:Math.pow(Bn,t),new ne(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new ne(oe(this.r),oe(this.g),oe(this.b),ie(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:ee,formatHex:ee,formatHex8:function(){return`#${ae(this.r)}${ae(this.g)}${ae(this.b)}${ae(255*(isNaN(this.opacity)?1:this.opacity))}`},formatRgb:re,toString:re})),Pn(se,(function(t,n,e,r){return 1===arguments.length?le(t):new se(t,n,e,null==r?1:r)}),Tn(qn,{brighter(t){return t=null==t?In:Math.pow(In,t),new se(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=null==t?Bn:Math.pow(Bn,t),new se(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new ne(he(t>=240?t-240:t+120,i,r),he(t,i,r),he(t<120?t+240:t-120,i,r),this.opacity)},clamp(){return new se(ce(this.h),fe(this.s),fe(this.l),ie(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=ie(this.opacity);return`${1===t?"hsl(":"hsla("}${ce(this.h)}, ${100*fe(this.s)}%, ${100*fe(this.l)}%${1===t?")":`, ${t})`}`}}));const de=t=>()=>t;function ye(t,n){var e=n-t;return e?function(t,n){return function(e){return t+e*n}}(t,e):de(isNaN(t)?n:t)}const ve=function t(n){var e=function(t){return 1==(t=+t)?ye:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):de(isNaN(n)?e:n)}}(n);function r(t,n){var r=e((t=te(t)).r,(n=te(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),a=ye(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=a(n),t+""}}return r.gamma=t,r}(1);function ge(t){return function(n){var e,r,i=n.length,o=new Array(i),a=new Array(i),u=new Array(i);for(e=0;e<i;++e)r=te(n[e]),o[e]=r.r||0,a[e]=r.g||0,u[e]=r.b||0;return o=t(o),a=t(a),u=t(u),r.opacity=1,function(t){return r.r=o(t),r.g=a(t),r.b=u(t),r+""}}}ge((function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],a=r>0?t[r-1]:2*i-o,u=r<n-1?t[r+2]:2*o-i;return pe((e-r/n)*n,a,i,o,u)}})),ge((function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],a=t[(r+1)%n],u=t[(r+2)%n];return pe((e-r/n)*n,i,o,a,u)}}));var me=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,we=new RegExp(me.source,"g");function _e(t,n){var e,r,i,o=me.lastIndex=we.lastIndex=0,a=-1,u=[],l=[];for(t+="",n+="";(e=me.exec(t))&&(r=we.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),u[a]?u[a]+=i:u[++a]=i),(e=e[0])===(r=r[0])?u[a]?u[a]+=r:u[++a]=r:(u[++a]=null,l.push({i:a,x:xn(e,r)})),o=we.lastIndex;return o<n.length&&(i=n.slice(o),u[a]?u[a]+=i:u[++a]=i),u.length<2?l[0]?function(t){return function(n){return t(n)+""}}(l[0].x):function(t){return function(){return t}}(n):(n=l.length,function(t){for(var e,r=0;r<n;++r)u[(e=l[r]).i]=e.x(t);return u.join("")})}function be(t,n){var e;return("number"==typeof n?xn:n instanceof Wn?ve:(e=Wn(n))?(n=e,ve):_e)(t,n)}function xe(t){return function(){this.removeAttribute(t)}}function Me(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Ae(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttribute(t);return a===o?null:a===r?i:i=n(r=a,e)}}function ke(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttributeNS(t.space,t.local);return a===o?null:a===r?i:i=n(r=a,e)}}function Ne(t,n,e){var r,i,o;return function(){var a,u,l=e(this);if(null!=l)return(a=this.getAttribute(t))===(u=l+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,l));this.removeAttribute(t)}}function Ee(t,n,e){var r,i,o;return function(){var a,u,l=e(this);if(null!=l)return(a=this.getAttributeNS(t.space,t.local))===(u=l+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,l));this.removeAttributeNS(t.space,t.local)}}function Se(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttributeNS(t.space,t.local,n.call(this,e))}}(t,i)),e}return i._value=n,i}function Le(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttribute(t,n.call(this,e))}}(t,i)),e}return i._value=n,i}function Ce(t,n){return function(){wn(this,t).delay=+n.apply(this,arguments)}}function $e(t,n){return n=+n,function(){wn(this,t).delay=n}}function De(t,n){return function(){_n(this,t).duration=+n.apply(this,arguments)}}function Pe(t,n){return n=+n,function(){_n(this,t).duration=n}}var Te=Bt.prototype.constructor;function qe(t){return function(){this.style.removeProperty(t)}}var Be=0;function Ie(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function Oe(){return++Be}var Re=Bt.prototype;Ie.prototype=function(t){return Bt().transition(t)}.prototype={constructor:Ie,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=N(t));for(var r=this._groups,i=r.length,o=new Array(i),a=0;a<i;++a)for(var u,l,s=r[a],c=s.length,f=o[a]=new Array(c),h=0;h<c;++h)(u=s[h])&&(l=t.call(u,u.__data__,h,s))&&("__data__"in u&&(l.__data__=u.__data__),f[h]=l,mn(f[h],n,e,h,f,bn(u,e)));return new Ie(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=S(t));for(var r=this._groups,i=r.length,o=[],a=[],u=0;u<i;++u)for(var l,s=r[u],c=s.length,f=0;f<c;++f)if(l=s[f]){for(var h,p=t.call(l,l.__data__,f,s),d=bn(l,e),y=0,v=p.length;y<v;++y)(h=p[y])&&mn(h,n,e,y,p,d);o.push(p),a.push(l)}return new Ie(o,a,n,e)},selectChild:Re.selectChild,selectChildren:Re.selectChildren,filter:function(t){"function"!=typeof t&&(t=L(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,l=r[i]=[],s=0;s<u;++s)(o=a[s])&&t.call(o,o.__data__,s,a)&&l.push(o);return new Ie(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var l,s=n[u],c=e[u],f=s.length,h=a[u]=new Array(f),p=0;p<f;++p)(l=s[p]||c[p])&&(h[p]=l);for(;u<r;++u)a[u]=n[u];return new Ie(a,this._parents,this._name,this._id)},selection:function(){return new Te(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=Oe(),r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],l=u.length,s=0;s<l;++s)if(a=u[s]){var c=bn(a,n);mn(a,t,e,s,u,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new Ie(r,this._parents,t,e)},call:Re.call,nodes:Re.nodes,node:Re.node,size:Re.size,empty:Re.empty,each:Re.each,on:function(t,n){var e=this._id;return arguments.length<2?bn(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every((function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t}))}(n)?wn:_n;return function(){var a=o(this,t),u=a.on;u!==r&&(i=(r=u).copy()).on(n,e),a.on=i}}(e,t,n))},attr:function(t,n){var e=F(t),r="transform"===e?Ln:be;return this.attrTween(t,"function"==typeof n?(e.local?Ee:Ne)(e,r,Dn(this,"attr."+t,n)):null==n?(e.local?Me:xe)(e):(e.local?ke:Ae)(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=F(t);return this.tween(e,(r.local?Se:Le)(r,n))},style:function(t,n,e){var r="transform"==(t+="")?Sn:be;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=nt(this,t),a=(this.style.removeProperty(t),nt(this,t));return o===a?null:o===e&&a===r?i:i=n(e=o,r=a)}}(t,r)).on("end.style."+t,qe(t)):"function"==typeof n?this.styleTween(t,function(t,n,e){var r,i,o;return function(){var a=nt(this,t),u=e(this),l=u+"";return null==u&&(this.style.removeProperty(t),l=u=nt(this,t)),a===l?null:a===r&&l===i?o:(i=l,o=n(r=a,u))}}(t,r,Dn(this,"style."+t,n))).each(function(t,n){var e,r,i,o,a="style."+n,u="end."+a;return function(){var l=_n(this,t),s=l.on,c=null==l.value[a]?o||(o=qe(n)):void 0;s===e&&i===c||(r=(e=s).copy()).on(u,i=c),l.on=r}}(this._id,t)):this.styleTween(t,function(t,n,e){var r,i,o=e+"";return function(){var a=nt(this,t);return a===o?null:a===r?i:i=n(r=a,e)}}(t,r,n),e).on("end.style."+t,null)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){var r,i;function o(){var o=n.apply(this,arguments);return o!==i&&(r=(i=o)&&function(t,n,e){return function(r){this.style.setProperty(t,n.call(this,r),e)}}(t,o,e)),r}return o._value=n,o}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(Dn(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var n="text";if(arguments.length<1)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;return this.tween(n,function(t){var n,e;function r(){var r=t.apply(this,arguments);return r!==e&&(n=(e=r)&&function(t){return function(n){this.textContent=t.call(this,n)}}(r)),n}return r._value=t,r}(t))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=bn(this.node(),e).tween,o=0,a=i.length;o<a;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?Cn:$n)(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?Ce:$e)(n,t)):bn(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?De:Pe)(n,t)):bn(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){_n(this,t).ease=n}}(n,t)):bn(this.node(),n).ease},easeVarying:function(t){if("function"!=typeof t)throw new Error;return this.each(function(t,n){return function(){var e=n.apply(this,arguments);if("function"!=typeof e)throw new Error;_n(this,t).ease=e}}(this._id,t))},end:function(){var t,n,e=this,r=e._id,i=e.size();return new Promise((function(o,a){var u={value:a},l={value:function(){0==--i&&o()}};e.each((function(){var e=_n(this,r),i=e.on;i!==t&&((n=(t=i).copy())._.cancel.push(u),n._.interrupt.push(u),n._.end.push(l)),e.on=n})),0===i&&o()}))},[Symbol.iterator]:Re[Symbol.iterator]};var je={time:null,delay:0,duration:250,ease:function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}};function Xe(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))throw new Error(`transition ${n} not found`);return e}Bt.prototype.interrupt=function(t){return this.each((function(){!function(t,n){var e,r,i,o=t.__transition,a=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>pn&&e.state<vn,e.state=gn,e.timer.stop(),e.on.call(r?"interrupt":"cancel",t,t.__data__,e.index,e.group),delete o[i]):a=!1;a&&delete t.__transition}}(this,t)}))},Bt.prototype.transition=function(t){var n,e;t instanceof Ie?(n=t._id,t=t._name):(n=Oe(),(e=je).time=tn(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],l=u.length,s=0;s<l;++s)(a=u[s])&&mn(a,t,n,s,u,e||Xe(a,n));return new Ie(r,this._parents,t,n)};const{abs:He,max:Ye,min:Fe}=Math;function Ge(t){return{type:t}}function ze(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),a=new Array(r);for(e=0;e<i;++e)o[e]=Ze(t[e],n[e]);for(;e<r;++e)a[e]=n[e];return function(t){for(e=0;e<i;++e)a[e]=o[e](t);return a}}function Ue(t,n){var e=new Date;return t=+t,n=+n,function(r){return e.setTime(t*(1-r)+n*r),e}}function Ve(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Ze(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}function Ke(t,n){n||(n=[]);var e,r=t?Math.min(n.length,t.length):0,i=n.slice();return function(o){for(e=0;e<r;++e)i[e]=t[e]*(1-o)+n[e]*o;return i}}function Ze(t,n){var e,r,i=typeof n;return null==n||"boolean"===i?de(n):("number"===i?xn:"string"===i?(e=Wn(n))?(n=e,ve):_e:n instanceof Wn?ve:n instanceof Date?Ue:(r=n,!ArrayBuffer.isView(r)||r instanceof DataView?Array.isArray(n)?ze:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?Ve:xn:Ke))(t,n)}function We(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}}function Je(t){return+t}["w","e"].map(Ge),["n","s"].map(Ge),["n","w","e","s","nw","ne","sw","se"].map(Ge);var Qe=[0,1];function tr(t){return t}function nr(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:(e=isNaN(n)?NaN:.5,function(){return e});var e}function er(t,n,e){var r=t[0],i=t[1],o=n[0],a=n[1];return i<r?(r=nr(i,r),o=e(a,o)):(r=nr(r,i),o=e(o,a)),function(t){return o(r(t))}}function rr(t,n,e){var r=Math.min(t.length,n.length)-1,i=new Array(r),o=new Array(r),a=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<r;)i[a]=nr(t[a],t[a+1]),o[a]=e(n[a],n[a+1]);return function(n){var e=y(t,n,1,r)-1;return o[e](i[e](n))}}function ir(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}var or,ar=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function ur(t){if(!(n=ar.exec(t)))throw new Error("invalid format: "+t);var n;return new lr({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function lr(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}function sr(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}function cr(t){return(t=sr(Math.abs(t)))?t[1]:NaN}function fr(t,n){var e=sr(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")}ur.prototype=lr.prototype,lr.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};const hr={"%":(t,n)=>(100*t).toFixed(n),b:t=>Math.round(t).toString(2),c:t=>t+"",d:function(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)},e:(t,n)=>t.toExponential(n),f:(t,n)=>t.toFixed(n),g:(t,n)=>t.toPrecision(n),o:t=>Math.round(t).toString(8),p:(t,n)=>fr(100*t,n),r:fr,s:function(t,n){var e=sr(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(or=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,a=r.length;return o===a?r:o>a?r+new Array(o-a+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+sr(t,Math.max(0,n+o-1))[0]},X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function pr(t){return t}var dr,yr,vr,gr=Array.prototype.map,mr=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function wr(){var t=function(){var t,n,e,r,i,o,a=Qe,u=Qe,l=Ze,s=tr;function c(){var t,n,e,l=Math.min(a.length,u.length);return s!==tr&&(t=a[0],n=a[l-1],t>n&&(e=t,t=n,n=e),s=function(e){return Math.max(t,Math.min(n,e))}),r=l>2?rr:er,i=o=null,f}function f(n){return null==n||isNaN(n=+n)?e:(i||(i=r(a.map(t),u,l)))(t(s(n)))}return f.invert=function(e){return s(n((o||(o=r(u,a.map(t),xn)))(e)))},f.domain=function(t){return arguments.length?(a=Array.from(t,Je),c()):a.slice()},f.range=function(t){return arguments.length?(u=Array.from(t),c()):u.slice()},f.rangeRound=function(t){return u=Array.from(t),l=We,c()},f.clamp=function(t){return arguments.length?(s=!!t||tr,c()):s!==tr},f.interpolate=function(t){return arguments.length?(l=t,c()):l},f.unknown=function(t){return arguments.length?(e=t,f):e},function(e,r){return t=e,n=r,c()}}()(tr,tr);return t.copy=function(){return n=t,wr().domain(n.domain()).range(n.range()).interpolate(n.interpolate()).clamp(n.clamp()).unknown(n.unknown());var n},ir.apply(t,arguments),function(t){var n=t.domain;return t.ticks=function(t){var e=n();return x(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return function(t,n,e,r){var i,o=function(t,n,e){e=+e;const r=(n=+n)<(t=+t),i=r?M(n,t,e):M(t,n,e);return(r?-1:1)*(i<0?1/-i:i)}(t,n,e);switch((r=ur(null==r?",f":r)).type){case"s":var a=Math.max(Math.abs(t),Math.abs(n));return null!=r.precision||isNaN(i=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(cr(n)/3)))-cr(Math.abs(t)))}(o,a))||(r.precision=i),vr(r,a);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(i=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,cr(n)-cr(t))+1}(o,Math.max(Math.abs(t),Math.abs(n))))||(r.precision=i-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(i=function(t){return Math.max(0,-cr(Math.abs(t)))}(o))||(r.precision=i-2*("%"===r.type))}return yr(r)}(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,i,o=n(),a=0,u=o.length-1,l=o[a],s=o[u],c=10;for(s<l&&(i=l,l=s,s=i,i=a,a=u,u=i);c-- >0;){if((i=M(l,s,e))===r)return o[a]=l,o[u]=s,n(o);if(i>0)l=Math.floor(l/i)*i,s=Math.ceil(s/i)*i;else{if(!(i<0))break;l=Math.ceil(l*i)/i,s=Math.floor(s*i)/i}r=i}return t},t}(t)}function _r(t){return"string"==typeof t?new Tt([[document.querySelector(t)]],[document.documentElement]):new Tt([[t]],Pt)}function br(t,n,e){this.k=t,this.x=n,this.y=e}dr=function(t){var n,e,r=void 0===t.grouping||void 0===t.thousands?pr:(n=gr.call(t.grouping,Number),e=t.thousands+"",function(t,r){for(var i=t.length,o=[],a=0,u=n[0],l=0;i>0&&u>0&&(l+u+1>r&&(u=Math.max(1,r-l)),o.push(t.substring(i-=u,i+u)),!((l+=u+1)>r));)u=n[a=(a+1)%n.length];return o.reverse().join(e)}),i=void 0===t.currency?"":t.currency[0]+"",o=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",u=void 0===t.numerals?pr:function(t){return function(n){return n.replace(/[0-9]/g,(function(n){return t[+n]}))}}(gr.call(t.numerals,String)),l=void 0===t.percent?"%":t.percent+"",s=void 0===t.minus?"−":t.minus+"",c=void 0===t.nan?"NaN":t.nan+"";function f(t){var n=(t=ur(t)).fill,e=t.align,f=t.sign,h=t.symbol,p=t.zero,d=t.width,y=t.comma,v=t.precision,g=t.trim,m=t.type;"n"===m?(y=!0,m="g"):hr[m]||(void 0===v&&(v=12),g=!0,m="g"),(p||"0"===n&&"="===e)&&(p=!0,n="0",e="=");var w="$"===h?i:"#"===h&&/[boxX]/.test(m)?"0"+m.toLowerCase():"",_="$"===h?o:/[%p]/.test(m)?l:"",b=hr[m],x=/[defgprs%]/.test(m);function M(t){var i,o,l,h=w,M=_;if("c"===m)M=b(t)+M,t="";else{var A=(t=+t)<0||1/t<0;if(t=isNaN(t)?c:b(Math.abs(t),v),g&&(t=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(!+t[r])break t;i>0&&(i=0)}return i>0?t.slice(0,i)+t.slice(n+1):t}(t)),A&&0==+t&&"+"!==f&&(A=!1),h=(A?"("===f?f:s:"-"===f||"("===f?"":f)+h,M=("s"===m?mr[8+or/3]:"")+M+(A&&"("===f?")":""),x)for(i=-1,o=t.length;++i<o;)if(48>(l=t.charCodeAt(i))||l>57){M=(46===l?a+t.slice(i+1):t.slice(i))+M,t=t.slice(0,i);break}}y&&!p&&(t=r(t,1/0));var k=h.length+t.length+M.length,N=k<d?new Array(d-k+1).join(n):"";switch(y&&p&&(t=r(N+t,N.length?d-M.length:1/0),N=""),e){case"<":t=h+t+M+N;break;case"=":t=h+N+t+M;break;case"^":t=N.slice(0,k=N.length>>1)+h+t+M+N.slice(k);break;default:t=N+h+t+M}return u(t)}return v=void 0===v?6:/[gprs]/.test(m)?Math.max(1,Math.min(21,v)):Math.max(0,Math.min(20,v)),M.toString=function(){return t+""},M}return{format:f,formatPrefix:function(t,n){var e=f(((t=ur(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(cr(n)/3))),i=Math.pow(10,-r),o=mr[8+r/3];return function(t){return e(i*t)+o}}}}({thousands:",",grouping:[3],currency:["$",""]}),yr=dr.format,vr=dr.formatPrefix,br.prototype={constructor:br,scale:function(t){return 1===t?this:new br(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new br(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},new br(1,0,0),br.prototype;var xr=function(t){return"EL"===t?"gr":t.toLowerCase()},Mr=function(t,n,e){var r=function(){var t=g,n=a,e=A;function r(r){Array.isArray(r)||(r=Array.from(r));var i,o,u,l=r.length,s=new Array(l);for(i=0;i<l;++i)s[i]=t(r[i],i,r);var c=n(s),f=c[0],h=c[1],p=e(s,f,h);if(!Array.isArray(p)){const t=h,e=+p;if(n===a&&([f,h]=function(t,n,e){let r;for(;;){const i=M(t,n,e);if(i===r||0===i||!isFinite(i))return[t,n];i>0?(t=Math.floor(t/i)*i,n=Math.ceil(n/i)*i):i<0&&(t=Math.ceil(t*i)/i,n=Math.floor(n*i)/i),r=i}}(f,h,e)),(p=x(f,h,e))[0]<=f&&(u=M(f,h,e)),p[p.length-1]>=h)if(t>=h&&n===a){const t=M(f,h,e);isFinite(t)&&(t>0?h=(Math.floor(h/t)+1)*t:t<0&&(h=(Math.ceil(h*-t)+1)/-t))}else p.pop()}for(var d=p.length,v=0,g=d;p[v]<=f;)++v;for(;p[g-1]>h;)--g;(v||g<d)&&(p=p.slice(v,g),d=g-v);var m,w=new Array(d+1);for(i=0;i<=d;++i)(m=w[i]=[]).x0=i>0?p[i-1]:f,m.x1=i<d?p[i]:h;if(isFinite(u)){if(u>0)for(i=0;i<l;++i)null!=(o=s[i])&&f<=o&&o<=h&&w[Math.min(d,Math.floor((o-f)/u))].push(r[i]);else if(u<0)for(i=0;i<l;++i)if(null!=(o=s[i])&&f<=o&&o<=h){const t=Math.floor((f-o)*u);w[Math.min(d,t+(p[t]<=o))].push(r[i])}}else for(i=0;i<l;++i)null!=(o=s[i])&&f<=o&&o<=h&&w[y(p,o,0,d)].push(r[i]);return w}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:v(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:v([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:v(Array.isArray(t)?l.call(t):t),r):e},r}().value((function(t){return t.value}))(n),o=wr().domain([0,r.length]).range(i[e]);r.forEach((function(t,n){var e=o(n);t.forEach((function(t){var n=t.country,r=xr(n),i=document.querySelector("#".concat(r));i&&(i.style.fill=String(e))}))})),_r(t).selectAll("path").style("stroke","#aaaaaa");var u=function(t,n,e){if(e||2===arguments.length)for(var r,i=0,o=n.length;i<o;i++)!r&&i in n||(r||(r=Array.prototype.slice.call(n,0,i)),r[i]=n[i]);return t.concat(r||Array.prototype.slice.call(n))}([null],r,!0),s=_r(t).select("#chart-legend");s.selectAll("*").remove(),s.append("text").text("Legenda:").attr("x",87).attr("y",9).style("font-size","4px");var c=s.selectAll("item").data(u).enter().append("g");c.append("rect").attr("x",87).attr("y",(function(t,n){return 5+6*(n+1)})).attr("width",5).attr("height",5).attr("fill",(function(t,n){return t?o(n):"#eeeeee"})).style("stroke-width",.1).style("stroke","#555"),c.append("text").attr("x",93).attr("y",(function(t,n){return 5+6*(n+1)+3.5})).style("font-size","3px").text((function(t){return t?"".concat(t.x0," - ").concat(t.x1):"Dáta nedostupné"}))},Ar=function(){var t=this;this.data=o,this.onPaletteChange=function(){t.redrawChart()},this.onModeChange=function(){t.redrawChart()},this.onSelectData=function(){t.selectDataInput.click()},this.onDataChange=function(n){return e=t,r=void 0,o=function(){var t,e;return function(t,n){var e,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(u){return function(l){return function(u){if(e)throw new TypeError("Generator is already executing.");for(;o&&(o=0,u[0]&&(a=0)),a;)try{if(e=1,r&&(i=2&u[0]?r.return:u[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,u[1])).done)return i;switch(r=0,i&&(u=[2&u[0],i.value]),u[0]){case 0:case 1:i=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!i||u[1]>i[0]&&u[1]<i[3])){a.label=u[1];break}if(6===u[0]&&a.label<i[1]){a.label=i[1],i=u;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(u);break}i[2]&&a.ops.pop(),a.trys.pop();continue}u=n.call(t,a)}catch(t){u=[6,t],r=0}finally{e=i=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,l])}}}(this,(function(r){return(t=n.target).files&&((e=new FileReader).readAsText(t.files[0]),e.onload=this.onDataLoaded),[2]}))},new((i=void 0)||(i=Promise))((function(t,n){function a(t){try{l(o.next(t))}catch(t){n(t)}}function u(t){try{l(o.throw(t))}catch(t){n(t)}}function l(n){n.done?t(n.value):function(t){return t instanceof i?t:new i((function(n){n(t)}))}(n.value).then(a,u)}l((o=o.apply(e,r||[])).next())}));var e,r,i,o},this.onDataLoaded=function(n){var e=String(n.target.result).split("\n").map((function(t){return{country:t.slice(0,2),value:Number.parseFloat(t.slice(3).replace(/\"/g,"").replace(",","."))}}));t.data=e,t.redrawChart()},this.onDownloadChart=function(){var n=new Blob([t.mapSvg.outerHTML]);t.downloadChartLink.href=URL.createObjectURL(n),t.downloadChartLink.click()},this.redrawChart=function(){if(0!==t.data.length){var n=t.paletteSelect.value,e=t.modeSelect.value;e==r.Bins?Mr(t.mapSvg,t.data,n):e===r.Continous&&function(t,n,e){var r=a(n,(function(t){return t.value})),o=r[0],u=r[1],l=wr().domain([o,u]).range(i[e]);n.forEach((function(t){var n=t.country,e=t.value,r=xr(n);_r("#".concat(r)).style("fill",l(e))})),_r(t).select("#chart-legend").selectAll("*").remove()}(t.mapSvg,t.data,n)}},this.initElements=function(){t.selectDataInput=document.querySelector("#upload-data-input"),t.selectDataButton=document.querySelector("#upload-data-button"),t.downloadChartButton=document.querySelector("#download-chart-button"),t.downloadChartLink=document.querySelector("#download-chart-link"),t.paletteSelect=document.querySelector("#palette-select"),t.modeSelect=document.querySelector("#mode-select"),t.mapSvg=document.querySelector("#eu-map")},this.initListeners=function(){t.selectDataButton.addEventListener("click",t.onSelectData),t.selectDataInput.addEventListener("change",t.onDataChange),t.downloadChartButton.addEventListener("click",t.onDownloadChart),t.paletteSelect.addEventListener("click",t.onPaletteChange),t.modeSelect.addEventListener("click",t.onModeChange)}};document.addEventListener("DOMContentLoaded",(function(){var t;(t=new Ar).initElements(),t.initListeners(),t.redrawChart()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,