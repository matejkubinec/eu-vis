(()=>{"use strict";var t,n;!function(t){t.Red="red",t.Pink="pink",t.Purple="purple",t.DeepPurple="deepPurple",t.Indigo="indigo",t.Blue="blue",t.LightBlue="lightBlue",t.Cyan="cyan",t.Teal="teal",t.Green="green",t.LightGreen="lightGreen",t.Lime="lime",t.Yellow="yellow",t.Amber="amber",t.Orange="orange",t.DeepOrange="deepOrange",t.Brown="brown",t.Grey="grey",t.BlueGrey="blueGrey"}(n||(n={}));var e,r,i=((t={})[n.Red]=["#ffebee","#b71c1c"],t[n.Pink]=["#fce4ec","#880e4f"],t[n.Purple]=["#f3e5f5","#4a148c"],t[n.DeepPurple]=["#ede7f6","#311b92"],t[n.Indigo]=["#e8eaf6","#1a237e"],t[n.Blue]=["#e3f2fd","#0d47a1"],t[n.LightBlue]=["#e1f5fe","#01579b"],t[n.Cyan]=["#e0f7fa","#006064"],t[n.Teal]=["#e0f2f1","#004d40"],t[n.Green]=["#e8f5e9","#1b5e20"],t[n.LightGreen]=["#f1f8e9","#33691e"],t[n.Lime]=["#f9fbe7","#827717"],t[n.Yellow]=["#fffde7","#f57f17"],t[n.Amber]=["#fff8e1","#ff6f00"],t[n.Orange]=["#fff3e0","#e65100"],t[n.DeepOrange]=["#fbe9e7","#bf360c"],t[n.Brown]=["#efebe9","#3e2723"],t[n.Grey]=["#fafafa","#212121"],t[n.BlueGrey]=["#eceff1","#263238"],t);!function(t){t.BE="BE",t.BG="BG",t.CZ="CZ",t.DK="DK",t.DE="DE",t.EE="EE",t.IE="IE",t.EL="EL",t.ES="ES",t.FR="FR",t.HR="HR",t.IT="IT",t.CY="CY",t.LV="LV",t.LT="LT",t.LU="LU",t.HU="HU",t.MT="MT",t.NL="NL",t.AT="AT",t.PL="PL",t.PT="PT",t.RO="RO",t.SI="SI",t.SK="SK",t.FI="FI",t.SE="SE"}(e||(e={})),Object.keys(e),function(t){t.Continous="continous",t.Bins="bins"}(r||(r={}));var o=[{country:e.BE,value:5.4},{country:e.BG,value:4.2},{country:e.CZ,value:2},{country:e.DK,value:5},{country:e.DE,value:3.2},{country:e.EE,value:4.4},{country:e.IE,value:5},{country:e.EL,value:17.3},{country:e.ES,value:14.1},{country:e.FR,value:8.5},{country:e.HR,value:6.6},{country:e.IT,value:10},{country:e.CY,value:7.1},{country:e.LV,value:6.3},{country:e.LT,value:6.3},{country:e.LU,value:5.6},{country:e.HU,value:3.4},{country:e.MT,value:3.4},{country:e.NL,value:3.4},{country:e.AT,value:4.5},{country:e.PL,value:3.3},{country:e.PT,value:6.5},{country:e.RO,value:3.9},{country:e.SI,value:4.5},{country:e.SK,value:5.8},{country:e.FI,value:6.7},{country:e.SE,value:6.8}];function a(t,n){let e,r;if(void 0===n)for(const n of t)null!=n&&(void 0===e?n>=n&&(e=r=n):(e>n&&(e=n),r<n&&(r=n)));else{let i=-1;for(let o of t)null!=(o=n(o,++i,t))&&(void 0===e?o>=o&&(e=r=o):(e>o&&(e=o),r<o&&(r=o)))}return[e,r]}var u=Array.prototype,l=u.slice;function s(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function c(t){let n=t,e=t;function r(t,n,r,i){for(null==r&&(r=0),null==i&&(i=t.length);r<i;){const o=r+i>>>1;e(t[o],n)<0?r=o+1:i=o}return r}return 1===t.length&&(n=(n,e)=>t(n)-e,e=function(t){return(n,e)=>s(t(n),e)}(t)),{left:r,center:function(t,e,i,o){null==i&&(i=0),null==o&&(o=t.length);const a=r(t,e,i,o-1);return a>i&&n(t[a-1],e)>-n(t[a],e)?a-1:a},right:function(t,n,r,i){for(null==r&&(r=0),null==i&&(i=t.length);r<i;){const o=r+i>>>1;e(t[o],n)>0?i=o:r=o+1}return r}}}u.map;const f=c(s),h=f.right,p=(f.left,c((function(t){return null===t?NaN:+t})).center,h);function d(t){return function(){return t}}function v(t){return t}var y=Math.sqrt(50),g=Math.sqrt(10),m=Math.sqrt(2);function w(t,n,e){var r,i,o,a,u=-1;if(e=+e,(t=+t)==(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(a=_(t,n,e))||!isFinite(a))return[];if(a>0)for(t=Math.ceil(t/a),n=Math.floor(n/a),o=new Array(i=Math.ceil(n-t+1));++u<i;)o[u]=(t+u)*a;else for(a=-a,t=Math.ceil(t*a),n=Math.floor(n*a),o=new Array(i=Math.ceil(n-t+1));++u<i;)o[u]=(t+u)/a;return r&&o.reverse(),o}function _(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=y?10:o>=g?5:o>=m?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=y?10:o>=g?5:o>=m?2:1)}function b(t){return Math.ceil(Math.log(function(t,n){let e=0;for(let n of t)null!=n&&(n=+n)>=n&&++e;return e}(t))/Math.LN2)+1}function x(){}function M(t){return null==t?x:function(){return this.querySelector(t)}}function k(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}function A(){return[]}function E(t){return null==t?A:function(){return this.querySelectorAll(t)}}function N(t){return function(){return this.matches(t)}}function S(t){return function(n){return n.matches(t)}}var L=Array.prototype.find;function C(){return this.firstElementChild}var D=Array.prototype.filter;function P(){return this.children}function T(t){return new Array(t.length)}function q(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}function B(t){return function(){return t}}function I(t,n,e,r,i,o){for(var a,u=0,l=n.length,s=o.length;u<s;++u)(a=n[u])?(a.__data__=o[u],r[u]=a):e[u]=new q(t,o[u]);for(;u<l;++u)(a=n[u])&&(i[u]=a)}function O(t,n,e,r,i,o,a){var u,l,s,c=new Map,f=n.length,h=o.length,p=new Array(f);for(u=0;u<f;++u)(l=n[u])&&(p[u]=s=a.call(l,l.__data__,u,n)+"",c.has(s)?i[u]=l:c.set(s,l));for(u=0;u<h;++u)s=a.call(t,o[u],u,o)+"",(l=c.get(s))?(r[u]=l,l.__data__=o[u],c.delete(s)):e[u]=new q(t,o[u]);for(u=0;u<f;++u)(l=n[u])&&c.get(p[u])===l&&(i[u]=l)}function R(t){return t.__data__}function j(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}q.prototype={constructor:q,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var X="http://www.w3.org/1999/xhtml";const Y={svg:"http://www.w3.org/2000/svg",xhtml:X,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function H(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),Y.hasOwnProperty(n)?{space:Y[n],local:t}:t}function F(t){return function(){this.removeAttribute(t)}}function G(t){return function(){this.removeAttributeNS(t.space,t.local)}}function z(t,n){return function(){this.setAttribute(t,n)}}function U(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function $(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function V(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}function K(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function Z(t){return function(){this.style.removeProperty(t)}}function W(t,n,e){return function(){this.style.setProperty(t,n,e)}}function J(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function Q(t,n){return t.style.getPropertyValue(n)||K(t).getComputedStyle(t,null).getPropertyValue(n)}function tt(t){return function(){delete this[t]}}function nt(t,n){return function(){this[t]=n}}function et(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}function rt(t){return t.trim().split(/^|\s+/)}function it(t){return t.classList||new ot(t)}function ot(t){this._node=t,this._names=rt(t.getAttribute("class")||"")}function at(t,n){for(var e=it(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function ut(t,n){for(var e=it(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function lt(t){return function(){at(this,t)}}function st(t){return function(){ut(this,t)}}function ct(t,n){return function(){(n.apply(this,arguments)?at:ut)(this,t)}}function ft(){this.textContent=""}function ht(t){return function(){this.textContent=t}}function pt(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}function dt(){this.innerHTML=""}function vt(t){return function(){this.innerHTML=t}}function yt(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}function gt(){this.nextSibling&&this.parentNode.appendChild(this)}function mt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function wt(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===X&&n.documentElement.namespaceURI===X?n.createElement(t):n.createElementNS(e,t)}}function _t(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function bt(t){var n=H(t);return(n.local?_t:wt)(n)}function xt(){return null}function Mt(){var t=this.parentNode;t&&t.removeChild(this)}function kt(){var t=this.cloneNode(!1),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function At(){var t=this.cloneNode(!0),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function Et(t){return t.trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}}))}function Nt(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.options);++i?n.length=i:delete this.__on}}}function St(t,n,e){return function(){var r,i=this.__on,o=function(t){return function(n){t.call(this,n,this.__data__)}}(n);if(i)for(var a=0,u=i.length;a<u;++a)if((r=i[a]).type===t.type&&r.name===t.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=o,r.options=e),void(r.value=n);this.addEventListener(t.type,o,e),r={type:t.type,name:t.name,value:n,listener:o,options:e},i?i.push(r):this.__on=[r]}}function Lt(t,n,e){var r=K(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function Ct(t,n){return function(){return Lt(this,t,n)}}function Dt(t,n){return function(){return Lt(this,t,n.apply(this,arguments))}}ot.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var Pt=[null];function Tt(t,n){this._groups=t,this._parents=n}function qt(){return new Tt([[document.documentElement]],Pt)}Tt.prototype=qt.prototype={constructor:Tt,select:function(t){"function"!=typeof t&&(t=M(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a,u=n[i],l=u.length,s=r[i]=new Array(l),c=0;c<l;++c)(o=u[c])&&(a=t.call(o,o.__data__,c,u))&&("__data__"in o&&(a.__data__=o.__data__),s[c]=a);return new Tt(r,this._parents)},selectAll:function(t){t="function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);return null==n?[]:k(n)}}(t):E(t);for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var a,u=n[o],l=u.length,s=0;s<l;++s)(a=u[s])&&(r.push(t.call(a,a.__data__,s,u)),i.push(a));return new Tt(r,i)},selectChild:function(t){return this.select(null==t?C:function(t){return function(){return L.call(this.children,t)}}("function"==typeof t?t:S(t)))},selectChildren:function(t){return this.selectAll(null==t?P:function(t){return function(){return D.call(this.children,t)}}("function"==typeof t?t:S(t)))},filter:function(t){"function"!=typeof t&&(t=N(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,l=r[i]=[],s=0;s<u;++s)(o=a[s])&&t.call(o,o.__data__,s,a)&&l.push(o);return new Tt(r,this._parents)},data:function(t,n){if(!arguments.length)return Array.from(this,R);var e=n?O:I,r=this._parents,i=this._groups;"function"!=typeof t&&(t=B(t));for(var o=i.length,a=new Array(o),u=new Array(o),l=new Array(o),s=0;s<o;++s){var c=r[s],f=i[s],h=f.length,p=k(t.call(c,c&&c.__data__,s,r)),d=p.length,v=u[s]=new Array(d),y=a[s]=new Array(d),g=l[s]=new Array(h);e(c,f,v,y,g,p,n);for(var m,w,_=0,b=0;_<d;++_)if(m=v[_]){for(_>=b&&(b=_+1);!(w=y[b])&&++b<d;);m._next=w||null}}return(a=new Tt(a,r))._enter=u,a._exit=l,a},enter:function(){return new Tt(this._enter||this._groups.map(T),this._parents)},exit:function(){return new Tt(this._exit||this._groups.map(T),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,o=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=n&&(i=n(i)),null==e?o.remove():e(o),r&&i?r.merge(i).order():i},merge:function(t){if(!(t instanceof Tt))throw new Error("invalid merge");for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var l,s=n[u],c=e[u],f=s.length,h=a[u]=new Array(f),p=0;p<f;++p)(l=s[p]||c[p])&&(h[p]=l);for(;u<r;++u)a[u]=n[u];return new Tt(a,this._parents)},selection:function(){return this},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,a=i[o];--o>=0;)(r=i[o])&&(a&&4^r.compareDocumentPosition(a)&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=j);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var a,u=e[o],l=u.length,s=i[o]=new Array(l),c=0;c<l;++c)(a=u[c])&&(s[c]=a);s.sort(n)}return new Tt(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var a=r[i];if(a)return a}return null},size:function(){let t=0;for(const n of this)++t;return t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],a=0,u=o.length;a<u;++a)(i=o[a])&&t.call(i,i.__data__,a,o);return this},attr:function(t,n){var e=H(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?G:F:"function"==typeof n?e.local?V:$:e.local?U:z)(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?Z:"function"==typeof n?J:W)(t,n,null==e?"":e)):Q(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?tt:"function"==typeof n?et:nt)(t,n)):this.node()[t]},classed:function(t,n){var e=rt(t+"");if(arguments.length<2){for(var r=it(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?ct:n?lt:st)(e,n))},text:function(t){return arguments.length?this.each(null==t?ft:("function"==typeof t?pt:ht)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?dt:("function"==typeof t?yt:vt)(t)):this.node().innerHTML},raise:function(){return this.each(gt)},lower:function(){return this.each(mt)},append:function(t){var n="function"==typeof t?t:bt(t);return this.select((function(){return this.appendChild(n.apply(this,arguments))}))},insert:function(t,n){var e="function"==typeof t?t:bt(t),r=null==n?xt:"function"==typeof n?n:M(n);return this.select((function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(Mt)},clone:function(t){return this.select(t?At:kt)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=Et(t+""),a=o.length;if(!(arguments.length<2)){for(u=n?St:Nt,r=0;r<a;++r)this.each(u(o[r],n,e));return this}var u=this.node().__on;if(u)for(var l,s=0,c=u.length;s<c;++s)for(r=0,l=u[s];r<a;++r)if((i=o[r]).type===l.type&&i.name===l.name)return l.value},dispatch:function(t,n){return this.each(("function"==typeof n?Dt:Ct)(t,n))},[Symbol.iterator]:function*(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r,i=t[n],o=0,a=i.length;o<a;++o)(r=i[o])&&(yield r)}};const Bt=qt;var It={value:()=>{}};function Ot(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new Rt(r)}function Rt(t){this._=t}function jt(t,n){return t.trim().split(/^|\s+/).map((function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}}))}function Xt(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function Yt(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=It,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}Rt.prototype=Ot.prototype={constructor:Rt,on:function(t,n){var e,r=this._,i=jt(t+"",r),o=-1,a=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<a;)if(e=(t=i[o]).type)r[e]=Yt(r[e],t.name,n);else if(null==n)for(e in r)r[e]=Yt(r[e],t.name,null);return this}for(;++o<a;)if((e=(t=i[o]).type)&&(e=Xt(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new Rt(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};const Ht=Ot;var Ft,Gt,zt=0,Ut=0,$t=0,Vt=0,Kt=0,Zt=0,Wt="object"==typeof performance&&performance.now?performance:Date,Jt="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Qt(){return Kt||(Jt(tn),Kt=Wt.now()+Zt)}function tn(){Kt=0}function nn(){this._call=this._time=this._next=null}function en(t,n,e){var r=new nn;return r.restart(t,n,e),r}function rn(){Kt=(Vt=Wt.now())+Zt,zt=Ut=0;try{!function(){Qt(),++zt;for(var t,n=Ft;n;)(t=Kt-n._time)>=0&&n._call.call(null,t),n=n._next;--zt}()}finally{zt=0,function(){for(var t,n,e=Ft,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Ft=n);Gt=t,an(r)}(),Kt=0}}function on(){var t=Wt.now(),n=t-Vt;n>1e3&&(Zt-=n,Vt=t)}function an(t){zt||(Ut&&(Ut=clearTimeout(Ut)),t-Kt>24?(t<1/0&&(Ut=setTimeout(rn,t-Wt.now()-Zt)),$t&&($t=clearInterval($t))):($t||(Vt=Wt.now(),$t=setInterval(on,1e3)),zt=1,Jt(rn)))}function un(t,n,e){var r=new nn;return n=null==n?0:+n,r.restart((e=>{r.stop(),t(e+n)}),n,e),r}nn.prototype=en.prototype={constructor:nn,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Qt():+e)+(null==n?0:+n),this._next||Gt===this||(Gt?Gt._next=this:Ft=this,Gt=this),this._call=t,this._time=e,an()},stop:function(){this._call&&(this._call=null,this._time=1/0,an())}};var ln=Ht("start","end","cancel","interrupt"),sn=[];function cn(t,n,e,r,i,o){var a=t.__transition;if(a){if(e in a)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(l){var s,c,f,h;if(1!==e.state)return u();for(s in i)if((h=i[s]).name===e.name){if(3===h.state)return un(o);4===h.state?(h.state=6,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[s]):+s<n&&(h.state=6,h.timer.stop(),h.on.call("cancel",t,t.__data__,h.index,h.group),delete i[s])}if(un((function(){3===e.state&&(e.state=4,e.timer.restart(a,e.delay,e.time),a(l))})),e.state=2,e.on.call("start",t,t.__data__,e.index,e.group),2===e.state){for(e.state=3,r=new Array(f=e.tween.length),s=0,c=-1;s<f;++s)(h=e.tween[s].value.call(t,t.__data__,e.index,e.group))&&(r[++c]=h);r.length=c+1}}function a(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(u),e.state=5,1),o=-1,a=r.length;++o<a;)r[o].call(t,i);5===e.state&&(e.on.call("end",t,t.__data__,e.index,e.group),u())}function u(){for(var r in e.state=6,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=en((function(t){e.state=1,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)}),0,e.time)}(t,e,{name:n,index:r,group:i,on:ln,tween:sn,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:0})}function fn(t,n){var e=pn(t,n);if(e.state>0)throw new Error("too late; already scheduled");return e}function hn(t,n){var e=pn(t,n);if(e.state>3)throw new Error("too late; already running");return e}function pn(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}function dn(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}var vn,yn=180/Math.PI,gn={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function mn(t,n,e,r,i,o){var a,u,l;return(a=Math.sqrt(t*t+n*n))&&(t/=a,n/=a),(l=t*e+n*r)&&(e-=t*l,r-=n*l),(u=Math.sqrt(e*e+r*r))&&(e/=u,r/=u,l/=u),t*r<n*e&&(t=-t,n=-n,l=-l,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*yn,skewX:Math.atan(l)*yn,scaleX:a,scaleY:u}}function wn(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,a){var u=[],l=[];return o=t(o),a=t(a),function(t,r,i,o,a,u){if(t!==i||r!==o){var l=a.push("translate(",null,n,null,e);u.push({i:l-4,x:dn(t,i)},{i:l-2,x:dn(r,o)})}else(i||o)&&a.push("translate("+i+n+o+e)}(o.translateX,o.translateY,a.translateX,a.translateY,u,l),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:dn(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,a.rotate,u,l),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:dn(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,a.skewX,u,l),function(t,n,e,r,o,a){if(t!==e||n!==r){var u=o.push(i(o)+"scale(",null,",",null,")");a.push({i:u-4,x:dn(t,e)},{i:u-2,x:dn(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,a.scaleX,a.scaleY,u,l),o=a=null,function(t){for(var n,e=-1,r=l.length;++e<r;)u[(n=l[e]).i]=n.x(t);return u.join("")}}}var _n=wn((function(t){const n=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(t+"");return n.isIdentity?gn:mn(n.a,n.b,n.c,n.d,n.e,n.f)}),"px, ","px)","deg)"),bn=wn((function(t){return null==t?gn:(vn||(vn=document.createElementNS("http://www.w3.org/2000/svg","g")),vn.setAttribute("transform",t),(t=vn.transform.baseVal.consolidate())?mn((t=t.matrix).a,t.b,t.c,t.d,t.e,t.f):gn)}),", ",")",")");function xn(t,n){var e,r;return function(){var i=hn(this,t),o=i.tween;if(o!==e)for(var a=0,u=(r=e=o).length;a<u;++a)if(r[a].name===n){(r=r.slice()).splice(a,1);break}i.tween=r}}function Mn(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=hn(this,t),a=o.tween;if(a!==r){i=(r=a).slice();for(var u={name:n,value:e},l=0,s=i.length;l<s;++l)if(i[l].name===n){i[l]=u;break}l===s&&i.push(u)}o.tween=i}}function kn(t,n,e){var r=t._id;return t.each((function(){var t=hn(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)})),function(t){return pn(t,r).value[n]}}function An(t,n,e){t.prototype=n.prototype=e,e.constructor=t}function En(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Nn(){}var Sn=.7,Ln=1/Sn,Cn="\\s*([+-]?\\d+)\\s*",Dn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Pn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Tn=/^#([0-9a-f]{3,8})$/,qn=new RegExp("^rgb\\("+[Cn,Cn,Cn]+"\\)$"),Bn=new RegExp("^rgb\\("+[Pn,Pn,Pn]+"\\)$"),In=new RegExp("^rgba\\("+[Cn,Cn,Cn,Dn]+"\\)$"),On=new RegExp("^rgba\\("+[Pn,Pn,Pn,Dn]+"\\)$"),Rn=new RegExp("^hsl\\("+[Dn,Pn,Pn]+"\\)$"),jn=new RegExp("^hsla\\("+[Dn,Pn,Pn,Dn]+"\\)$"),Xn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Yn(){return this.rgb().formatHex()}function Hn(){return this.rgb().formatRgb()}function Fn(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=Tn.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?Gn(n):3===e?new Vn(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?zn(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?zn(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=qn.exec(t))?new Vn(n[1],n[2],n[3],1):(n=Bn.exec(t))?new Vn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=In.exec(t))?zn(n[1],n[2],n[3],n[4]):(n=On.exec(t))?zn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Rn.exec(t))?Jn(n[1],n[2]/100,n[3]/100,1):(n=jn.exec(t))?Jn(n[1],n[2]/100,n[3]/100,n[4]):Xn.hasOwnProperty(t)?Gn(Xn[t]):"transparent"===t?new Vn(NaN,NaN,NaN,0):null}function Gn(t){return new Vn(t>>16&255,t>>8&255,255&t,1)}function zn(t,n,e,r){return r<=0&&(t=n=e=NaN),new Vn(t,n,e,r)}function Un(t){return t instanceof Nn||(t=Fn(t)),t?new Vn((t=t.rgb()).r,t.g,t.b,t.opacity):new Vn}function $n(t,n,e,r){return 1===arguments.length?Un(t):new Vn(t,n,e,null==r?1:r)}function Vn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function Kn(){return"#"+Wn(this.r)+Wn(this.g)+Wn(this.b)}function Zn(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function Wn(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Jn(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new te(t,n,e,r)}function Qn(t){if(t instanceof te)return new te(t.h,t.s,t.l,t.opacity);if(t instanceof Nn||(t=Fn(t)),!t)return new te;if(t instanceof te)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),a=NaN,u=o-i,l=(o+i)/2;return u?(a=n===o?(e-r)/u+6*(e<r):e===o?(r-n)/u+2:(n-e)/u+4,u/=l<.5?o+i:2-o-i,a*=60):u=l>0&&l<1?0:a,new te(a,u,l,t.opacity)}function te(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function ne(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}function ee(t,n,e,r,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*n+(4-6*o+3*a)*e+(1+3*t+3*o-3*a)*r+a*i)/6}An(Nn,Fn,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:Yn,formatHex:Yn,formatHsl:function(){return Qn(this).formatHsl()},formatRgb:Hn,toString:Hn}),An(Vn,$n,En(Nn,{brighter:function(t){return t=null==t?Ln:Math.pow(Ln,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?Sn:Math.pow(Sn,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Kn,formatHex:Kn,formatRgb:Zn,toString:Zn})),An(te,(function(t,n,e,r){return 1===arguments.length?Qn(t):new te(t,n,e,null==r?1:r)}),En(Nn,{brighter:function(t){return t=null==t?Ln:Math.pow(Ln,t),new te(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?Sn:Math.pow(Sn,t),new te(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new Vn(ne(t>=240?t-240:t+120,i,r),ne(t,i,r),ne(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));const re=t=>()=>t;function ie(t,n){var e=n-t;return e?function(t,n){return function(e){return t+e*n}}(t,e):re(isNaN(t)?n:t)}const oe=function t(n){var e=function(t){return 1==(t=+t)?ie:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):re(isNaN(n)?e:n)}}(n);function r(t,n){var r=e((t=$n(t)).r,(n=$n(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),a=ie(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=a(n),t+""}}return r.gamma=t,r}(1);function ae(t){return function(n){var e,r,i=n.length,o=new Array(i),a=new Array(i),u=new Array(i);for(e=0;e<i;++e)r=$n(n[e]),o[e]=r.r||0,a[e]=r.g||0,u[e]=r.b||0;return o=t(o),a=t(a),u=t(u),r.opacity=1,function(t){return r.r=o(t),r.g=a(t),r.b=u(t),r+""}}}ae((function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],a=r>0?t[r-1]:2*i-o,u=r<n-1?t[r+2]:2*o-i;return ee((e-r/n)*n,a,i,o,u)}})),ae((function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],a=t[(r+1)%n],u=t[(r+2)%n];return ee((e-r/n)*n,i,o,a,u)}}));var ue=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,le=new RegExp(ue.source,"g");function se(t,n){var e,r,i,o=ue.lastIndex=le.lastIndex=0,a=-1,u=[],l=[];for(t+="",n+="";(e=ue.exec(t))&&(r=le.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),u[a]?u[a]+=i:u[++a]=i),(e=e[0])===(r=r[0])?u[a]?u[a]+=r:u[++a]=r:(u[++a]=null,l.push({i:a,x:dn(e,r)})),o=le.lastIndex;return o<n.length&&(i=n.slice(o),u[a]?u[a]+=i:u[++a]=i),u.length<2?l[0]?function(t){return function(n){return t(n)+""}}(l[0].x):function(t){return function(){return t}}(n):(n=l.length,function(t){for(var e,r=0;r<n;++r)u[(e=l[r]).i]=e.x(t);return u.join("")})}function ce(t,n){var e;return("number"==typeof n?dn:n instanceof Fn?oe:(e=Fn(n))?(n=e,oe):se)(t,n)}function fe(t){return function(){this.removeAttribute(t)}}function he(t){return function(){this.removeAttributeNS(t.space,t.local)}}function pe(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttribute(t);return a===o?null:a===r?i:i=n(r=a,e)}}function de(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttributeNS(t.space,t.local);return a===o?null:a===r?i:i=n(r=a,e)}}function ve(t,n,e){var r,i,o;return function(){var a,u,l=e(this);if(null!=l)return(a=this.getAttribute(t))===(u=l+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,l));this.removeAttribute(t)}}function ye(t,n,e){var r,i,o;return function(){var a,u,l=e(this);if(null!=l)return(a=this.getAttributeNS(t.space,t.local))===(u=l+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,l));this.removeAttributeNS(t.space,t.local)}}function ge(t,n){return function(e){this.setAttribute(t,n.call(this,e))}}function me(t,n){return function(e){this.setAttributeNS(t.space,t.local,n.call(this,e))}}function we(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&me(t,i)),e}return i._value=n,i}function _e(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&ge(t,i)),e}return i._value=n,i}function be(t,n){return function(){fn(this,t).delay=+n.apply(this,arguments)}}function xe(t,n){return n=+n,function(){fn(this,t).delay=n}}function Me(t,n){return function(){hn(this,t).duration=+n.apply(this,arguments)}}function ke(t,n){return n=+n,function(){hn(this,t).duration=n}}function Ae(t,n){if("function"!=typeof n)throw new Error;return function(){hn(this,t).ease=n}}function Ee(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every((function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t}))}(n)?fn:hn;return function(){var a=o(this,t),u=a.on;u!==r&&(i=(r=u).copy()).on(n,e),a.on=i}}var Ne=Bt.prototype.constructor;function Se(t){return function(){this.style.removeProperty(t)}}function Le(t,n,e){return function(r){this.style.setProperty(t,n.call(this,r),e)}}function Ce(t,n,e){var r,i;function o(){var o=n.apply(this,arguments);return o!==i&&(r=(i=o)&&Le(t,o,e)),r}return o._value=n,o}function De(t){return function(n){this.textContent=t.call(this,n)}}function Pe(t){var n,e;function r(){var r=t.apply(this,arguments);return r!==e&&(n=(e=r)&&De(r)),n}return r._value=t,r}var Te=0;function qe(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function Be(){return++Te}var Ie=Bt.prototype;qe.prototype=function(t){return Bt().transition(t)}.prototype={constructor:qe,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=M(t));for(var r=this._groups,i=r.length,o=new Array(i),a=0;a<i;++a)for(var u,l,s=r[a],c=s.length,f=o[a]=new Array(c),h=0;h<c;++h)(u=s[h])&&(l=t.call(u,u.__data__,h,s))&&("__data__"in u&&(l.__data__=u.__data__),f[h]=l,cn(f[h],n,e,h,f,pn(u,e)));return new qe(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=E(t));for(var r=this._groups,i=r.length,o=[],a=[],u=0;u<i;++u)for(var l,s=r[u],c=s.length,f=0;f<c;++f)if(l=s[f]){for(var h,p=t.call(l,l.__data__,f,s),d=pn(l,e),v=0,y=p.length;v<y;++v)(h=p[v])&&cn(h,n,e,v,p,d);o.push(p),a.push(l)}return new qe(o,a,n,e)},filter:function(t){"function"!=typeof t&&(t=N(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,l=r[i]=[],s=0;s<u;++s)(o=a[s])&&t.call(o,o.__data__,s,a)&&l.push(o);return new qe(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var l,s=n[u],c=e[u],f=s.length,h=a[u]=new Array(f),p=0;p<f;++p)(l=s[p]||c[p])&&(h[p]=l);for(;u<r;++u)a[u]=n[u];return new qe(a,this._parents,this._name,this._id)},selection:function(){return new Ne(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=Be(),r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],l=u.length,s=0;s<l;++s)if(a=u[s]){var c=pn(a,n);cn(a,t,e,s,u,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new qe(r,this._parents,t,e)},call:Ie.call,nodes:Ie.nodes,node:Ie.node,size:Ie.size,empty:Ie.empty,each:Ie.each,on:function(t,n){var e=this._id;return arguments.length<2?pn(this.node(),e).on.on(t):this.each(Ee(e,t,n))},attr:function(t,n){var e=H(t),r="transform"===e?bn:ce;return this.attrTween(t,"function"==typeof n?(e.local?ye:ve)(e,r,kn(this,"attr."+t,n)):null==n?(e.local?he:fe)(e):(e.local?de:pe)(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=H(t);return this.tween(e,(r.local?we:_e)(r,n))},style:function(t,n,e){var r="transform"==(t+="")?_n:ce;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=Q(this,t),a=(this.style.removeProperty(t),Q(this,t));return o===a?null:o===e&&a===r?i:i=n(e=o,r=a)}}(t,r)).on("end.style."+t,Se(t)):"function"==typeof n?this.styleTween(t,function(t,n,e){var r,i,o;return function(){var a=Q(this,t),u=e(this),l=u+"";return null==u&&(this.style.removeProperty(t),l=u=Q(this,t)),a===l?null:a===r&&l===i?o:(i=l,o=n(r=a,u))}}(t,r,kn(this,"style."+t,n))).each(function(t,n){var e,r,i,o,a="style."+n,u="end."+a;return function(){var l=hn(this,t),s=l.on,c=null==l.value[a]?o||(o=Se(n)):void 0;s===e&&i===c||(r=(e=s).copy()).on(u,i=c),l.on=r}}(this._id,t)):this.styleTween(t,function(t,n,e){var r,i,o=e+"";return function(){var a=Q(this,t);return a===o?null:a===r?i:i=n(r=a,e)}}(t,r,n),e).on("end.style."+t,null)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,Ce(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(kn(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var n="text";if(arguments.length<1)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;return this.tween(n,Pe(t))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=pn(this.node(),e).tween,o=0,a=i.length;o<a;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?xn:Mn)(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?be:xe)(n,t)):pn(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?Me:ke)(n,t)):pn(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(Ae(n,t)):pn(this.node(),n).ease},easeVarying:function(t){if("function"!=typeof t)throw new Error;return this.each(function(t,n){return function(){var e=n.apply(this,arguments);if("function"!=typeof e)throw new Error;hn(this,t).ease=e}}(this._id,t))},end:function(){var t,n,e=this,r=e._id,i=e.size();return new Promise((function(o,a){var u={value:a},l={value:function(){0==--i&&o()}};e.each((function(){var e=hn(this,r),i=e.on;i!==t&&((n=(t=i).copy())._.cancel.push(u),n._.interrupt.push(u),n._.end.push(l)),e.on=n})),0===i&&o()}))},[Symbol.iterator]:Ie[Symbol.iterator]};var Oe={time:null,delay:0,duration:250,ease:function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}};function Re(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))throw new Error(`transition ${n} not found`);return e}Bt.prototype.interrupt=function(t){return this.each((function(){!function(t,n){var e,r,i,o=t.__transition,a=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>2&&e.state<5,e.state=6,e.timer.stop(),e.on.call(r?"interrupt":"cancel",t,t.__data__,e.index,e.group),delete o[i]):a=!1;a&&delete t.__transition}}(this,t)}))},Bt.prototype.transition=function(t){var n,e;t instanceof qe?(n=t._id,t=t._name):(n=Be(),(e=Oe).time=Qt(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],l=u.length,s=0;s<l;++s)(a=u[s])&&cn(a,t,n,s,u,e||Re(a,n));return new qe(r,this._parents,t,n)};const{abs:je,max:Xe,min:Ye}=Math;function He(t){return{type:t}}function Fe(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),a=new Array(r);for(e=0;e<i;++e)o[e]=$e(t[e],n[e]);for(;e<r;++e)a[e]=n[e];return function(t){for(e=0;e<i;++e)a[e]=o[e](t);return a}}function Ge(t,n){var e=new Date;return t=+t,n=+n,function(r){return e.setTime(t*(1-r)+n*r),e}}function ze(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=$e(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}function Ue(t,n){n||(n=[]);var e,r=t?Math.min(n.length,t.length):0,i=n.slice();return function(o){for(e=0;e<r;++e)i[e]=t[e]*(1-o)+n[e]*o;return i}}function $e(t,n){var e,r,i=typeof n;return null==n||"boolean"===i?re(n):("number"===i?dn:"string"===i?(e=Fn(n))?(n=e,oe):se:n instanceof Fn?oe:n instanceof Date?Ge:(r=n,!ArrayBuffer.isView(r)||r instanceof DataView?Array.isArray(n)?Fe:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?ze:dn:Ue))(t,n)}function Ve(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}}function Ke(t){return+t}["w","e"].map(He),["n","s"].map(He),["n","w","e","s","nw","ne","sw","se"].map(He);var Ze=[0,1];function We(t){return t}function Je(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:(e=isNaN(n)?NaN:.5,function(){return e});var e}function Qe(t,n,e){var r=t[0],i=t[1],o=n[0],a=n[1];return i<r?(r=Je(i,r),o=e(a,o)):(r=Je(r,i),o=e(o,a)),function(t){return o(r(t))}}function tr(t,n,e){var r=Math.min(t.length,n.length)-1,i=new Array(r),o=new Array(r),a=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<r;)i[a]=Je(t[a],t[a+1]),o[a]=e(n[a],n[a+1]);return function(n){var e=p(t,n,1,r)-1;return o[e](i[e](n))}}function nr(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function er(){return function(){var t,n,e,r,i,o,a=Ze,u=Ze,l=$e,s=We;function c(){var t,n,e,l=Math.min(a.length,u.length);return s!==We&&(t=a[0],n=a[l-1],t>n&&(e=t,t=n,n=e),s=function(e){return Math.max(t,Math.min(n,e))}),r=l>2?tr:Qe,i=o=null,f}function f(n){return isNaN(n=+n)?e:(i||(i=r(a.map(t),u,l)))(t(s(n)))}return f.invert=function(e){return s(n((o||(o=r(u,a.map(t),dn)))(e)))},f.domain=function(t){return arguments.length?(a=Array.from(t,Ke),c()):a.slice()},f.range=function(t){return arguments.length?(u=Array.from(t),c()):u.slice()},f.rangeRound=function(t){return u=Array.from(t),l=Ve,c()},f.clamp=function(t){return arguments.length?(s=!!t||We,c()):s!==We},f.interpolate=function(t){return arguments.length?(l=t,c()):l},f.unknown=function(t){return arguments.length?(e=t,f):e},function(e,r){return t=e,n=r,c()}}()(We,We)}function rr(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}var ir,or=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function ar(t){if(!(n=or.exec(t)))throw new Error("invalid format: "+t);var n;return new ur({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function ur(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}function lr(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}function sr(t){return(t=lr(Math.abs(t)))?t[1]:NaN}function cr(t,n){var e=lr(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")}ar.prototype=ur.prototype,ur.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};const fr={"%":(t,n)=>(100*t).toFixed(n),b:t=>Math.round(t).toString(2),c:t=>t+"",d:function(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)},e:(t,n)=>t.toExponential(n),f:(t,n)=>t.toFixed(n),g:(t,n)=>t.toPrecision(n),o:t=>Math.round(t).toString(8),p:(t,n)=>cr(100*t,n),r:cr,s:function(t,n){var e=lr(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(ir=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,a=r.length;return o===a?r:o>a?r+new Array(o-a+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+lr(t,Math.max(0,n+o-1))[0]},X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function hr(t){return t}var pr,dr,vr,yr=Array.prototype.map,gr=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function mr(t){var n=t.domain;return t.ticks=function(t){var e=n();return w(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return function(t,n,e,r){var i,o=function(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=y?i*=10:o>=g?i*=5:o>=m&&(i*=2),n<t?-i:i}(t,n,e);switch((r=ar(null==r?",f":r)).type){case"s":var a=Math.max(Math.abs(t),Math.abs(n));return null!=r.precision||isNaN(i=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(sr(n)/3)))-sr(Math.abs(t)))}(o,a))||(r.precision=i),vr(r,a);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(i=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,sr(n)-sr(t))+1}(o,Math.max(Math.abs(t),Math.abs(n))))||(r.precision=i-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(i=function(t){return Math.max(0,-sr(Math.abs(t)))}(o))||(r.precision=i-2*("%"===r.type))}return dr(r)}(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,i,o=n(),a=0,u=o.length-1,l=o[a],s=o[u],c=10;for(s<l&&(i=l,l=s,s=i,i=a,a=u,u=i);c-- >0;){if((i=_(l,s,e))===r)return o[a]=l,o[u]=s,n(o);if(i>0)l=Math.floor(l/i)*i,s=Math.ceil(s/i)*i;else{if(!(i<0))break;l=Math.ceil(l*i)/i,s=Math.floor(s*i)/i}r=i}return t},t}function wr(){var t=er();return t.copy=function(){return nr(t,wr())},rr.apply(t,arguments),mr(t)}function _r(t){return"string"==typeof t?new Tt([[document.querySelector(t)]],[document.documentElement]):new Tt([[t]],Pt)}function br(t,n,e){this.k=t,this.x=n,this.y=e}pr=function(t){var n,e,r=void 0===t.grouping||void 0===t.thousands?hr:(n=yr.call(t.grouping,Number),e=t.thousands+"",function(t,r){for(var i=t.length,o=[],a=0,u=n[0],l=0;i>0&&u>0&&(l+u+1>r&&(u=Math.max(1,r-l)),o.push(t.substring(i-=u,i+u)),!((l+=u+1)>r));)u=n[a=(a+1)%n.length];return o.reverse().join(e)}),i=void 0===t.currency?"":t.currency[0]+"",o=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",u=void 0===t.numerals?hr:function(t){return function(n){return n.replace(/[0-9]/g,(function(n){return t[+n]}))}}(yr.call(t.numerals,String)),l=void 0===t.percent?"%":t.percent+"",s=void 0===t.minus?"−":t.minus+"",c=void 0===t.nan?"NaN":t.nan+"";function f(t){var n=(t=ar(t)).fill,e=t.align,f=t.sign,h=t.symbol,p=t.zero,d=t.width,v=t.comma,y=t.precision,g=t.trim,m=t.type;"n"===m?(v=!0,m="g"):fr[m]||(void 0===y&&(y=12),g=!0,m="g"),(p||"0"===n&&"="===e)&&(p=!0,n="0",e="=");var w="$"===h?i:"#"===h&&/[boxX]/.test(m)?"0"+m.toLowerCase():"",_="$"===h?o:/[%p]/.test(m)?l:"",b=fr[m],x=/[defgprs%]/.test(m);function M(t){var i,o,l,h=w,M=_;if("c"===m)M=b(t)+M,t="";else{var k=(t=+t)<0||1/t<0;if(t=isNaN(t)?c:b(Math.abs(t),y),g&&(t=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(!+t[r])break t;i>0&&(i=0)}return i>0?t.slice(0,i)+t.slice(n+1):t}(t)),k&&0==+t&&"+"!==f&&(k=!1),h=(k?"("===f?f:s:"-"===f||"("===f?"":f)+h,M=("s"===m?gr[8+ir/3]:"")+M+(k&&"("===f?")":""),x)for(i=-1,o=t.length;++i<o;)if(48>(l=t.charCodeAt(i))||l>57){M=(46===l?a+t.slice(i+1):t.slice(i))+M,t=t.slice(0,i);break}}v&&!p&&(t=r(t,1/0));var A=h.length+t.length+M.length,E=A<d?new Array(d-A+1).join(n):"";switch(v&&p&&(t=r(E+t,E.length?d-M.length:1/0),E=""),e){case"<":t=h+t+M+E;break;case"=":t=h+E+t+M;break;case"^":t=E.slice(0,A=E.length>>1)+h+t+M+E.slice(A);break;default:t=E+h+t+M}return u(t)}return y=void 0===y?6:/[gprs]/.test(m)?Math.max(1,Math.min(21,y)):Math.max(0,Math.min(20,y)),M.toString=function(){return t+""},M}return{format:f,formatPrefix:function(t,n){var e=f(((t=ar(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(sr(n)/3))),i=Math.pow(10,-r),o=gr[8+r/3];return function(t){return e(i*t)+o}}}}({thousands:",",grouping:[3],currency:["$",""]}),dr=pr.format,vr=pr.formatPrefix,br.prototype={constructor:br,scale:function(t){return 1===t?this:new br(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new br(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},new br(1,0,0),br.prototype;var xr=function(t){switch(t){case"EL":return"gr";default:return t.toLowerCase()}},Mr=function(){var t=this;this.data=o,this.onPaletteChange=function(){t.redrawChart()},this.onModeChange=function(){t.redrawChart()},this.onSelectData=function(){t.selectDataInput.click()},this.onDataChange=function(n){return e=t,r=void 0,o=function(){var t,e;return function(t,n){var e,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(e)throw new TypeError("Generator is already executing.");for(;a;)try{if(e=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=n.call(t,a)}catch(t){o=[6,t],r=0}finally{e=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}}(this,(function(r){return(t=n.target).files&&((e=new FileReader).readAsText(t.files[0]),e.onload=this.onDataLoaded),[2]}))},new((i=void 0)||(i=Promise))((function(t,n){function a(t){try{l(o.next(t))}catch(t){n(t)}}function u(t){try{l(o.throw(t))}catch(t){n(t)}}function l(n){n.done?t(n.value):function(t){return t instanceof i?t:new i((function(n){n(t)}))}(n.value).then(a,u)}l((o=o.apply(e,r||[])).next())}));var e,r,i,o},this.onDataLoaded=function(n){var e=String(n.target.result).split("\n").map((function(t){return{country:t.slice(0,2),value:Number.parseFloat(t.slice(3).replace(/\"/g,"").replace(",","."))}}));t.data=e,t.redrawChart()},this.onDownloadChart=function(){var n=new Blob([t.mapSvg.outerHTML]);t.downloadChartLink.href=URL.createObjectURL(n),t.downloadChartLink.click()},this.redrawChart=function(){if(0!==t.data.length){var n=t.paletteSelect.value,e=t.modeSelect.value;e==r.Bins?function(t,n,e){var r=function(){var t=v,n=a,e=b;function r(r){Array.isArray(r)||(r=Array.from(r));var i,o,u=r.length,l=new Array(u);for(i=0;i<u;++i)l[i]=t(r[i],i,r);var s=n(l),c=s[0],f=s[1],h=e(l,c,f);if(!Array.isArray(h)){const t=f,e=+h;if(n===a&&([c,f]=function(t,n,e){let r;for(;;){const i=_(t,n,e);if(i===r||0===i||!isFinite(i))return[t,n];i>0?(t=Math.floor(t/i)*i,n=Math.ceil(n/i)*i):i<0&&(t=Math.ceil(t*i)/i,n=Math.floor(n*i)/i),r=i}}(c,f,e)),(h=w(c,f,e))[h.length-1]>=f)if(t>=f&&n===a){const t=_(c,f,e);isFinite(t)&&(t>0?f=(Math.floor(f/t)+1)*t:t<0&&(f=(Math.ceil(f*-t)+1)/-t))}else h.pop()}for(var d=h.length;h[0]<=c;)h.shift(),--d;for(;h[d-1]>f;)h.pop(),--d;var v,y=new Array(d+1);for(i=0;i<=d;++i)(v=y[i]=[]).x0=i>0?h[i-1]:c,v.x1=i<d?h[i]:f;for(i=0;i<u;++i)c<=(o=l[i])&&o<=f&&y[p(h,o,0,d)].push(r[i]);return y}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:d(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:d([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?d(l.call(t)):d(t),r):e},r}().value((function(t){return t.value}))(n),o=wr().domain([0,r.length]).range(i[e]);r.forEach((function(t,n){var e=o(n);t.forEach((function(t){var n=t.country,r=xr(n),i=document.querySelector("#"+r);i&&(i.style.fill=String(e))}))}));var u=function(){for(var t=0,n=0,e=arguments.length;n<e;n++)t+=arguments[n].length;var r=Array(t),i=0;for(n=0;n<e;n++)for(var o=arguments[n],a=0,u=o.length;a<u;a++,i++)r[i]=o[a];return r}([null],r),s=_r(t).select("#chart-legend");s.selectAll("*").remove(),s.append("text").text("Legenda:").attr("x",87).attr("y",9).style("font-size","4px");var c=s.selectAll("item").data(u).enter().append("g");c.append("rect").attr("x",87).attr("y",(function(t,n){return 5+6*(n+1)})).attr("width",5).attr("height",5).attr("fill",(function(t,n){return t?o(n):"#eeeeee"})).style("stroke-width",.1).style("stroke","#555"),c.append("text").attr("x",93).attr("y",(function(t,n){return 5+6*(n+1)+3.5})).style("font-size","3px").text((function(t){return t?t.x0+" - "+t.x1:"Dáta nedostupné"}))}(t.mapSvg,t.data,n):e===r.Continous&&function(t,n,e){var r=a(n,(function(t){return t.value})),o=r[0],u=r[1],l=wr().domain([o,u]).range(i[e]);n.forEach((function(t){var n=t.country,e=t.value;_r("#"+xr(n)).style("fill",l(e))})),_r(t).select("#chart-legend").selectAll("*").remove()}(t.mapSvg,t.data,n)}},this.initElements=function(){t.selectDataInput=document.querySelector("#upload-data-input"),t.selectDataButton=document.querySelector("#upload-data-button"),t.downloadChartButton=document.querySelector("#download-chart-button"),t.downloadChartLink=document.querySelector("#download-chart-link"),t.paletteSelect=document.querySelector("#palette-select"),t.modeSelect=document.querySelector("#mode-select"),t.mapSvg=document.querySelector("#eu-map")},this.initListeners=function(){t.selectDataButton.addEventListener("click",t.onSelectData),t.selectDataInput.addEventListener("change",t.onDataChange),t.downloadChartButton.addEventListener("click",t.onDownloadChart),t.paletteSelect.addEventListener("click",t.onPaletteChange),t.modeSelect.addEventListener("click",t.onModeChange)}};document.addEventListener("DOMContentLoaded",(function(){var t;(t=new Mr).initElements(),t.initListeners(),t.redrawChart()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,